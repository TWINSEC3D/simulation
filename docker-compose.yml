version: '3.7'
services:
  postgres-db:
    build: ./config/db
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: warehouse
    ports:
      - "5432:5432"
    networks:
      - simulation-network
#    volumes:
#      - ./config/db/warehouse_dump.sql:/docker-entrypoint-initdb.d/warehouse_dump.csv
#      - ./config/db/init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./config/db-entrypoint.sh:/docker-entrypoint-initdb.d/db-entrypoint.sh
#    entrypoint: ["/bin/bash", "-c", "chmod +x /docker-entrypoint-initdb.d/db-entrypoint.sh && /docker-entrypoint-initdb.d/db-entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: server
    restart: always
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    ports:
      - "8080:8080"
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/server.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy

  conveyor:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: conveyor
    restart: always
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/conveyor.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  idp_client:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: idp_client
    restart: always
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/idp_client.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  crane:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: crane
    restart: always
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/crane.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  hmi:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: hmi
    restart: always
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && python3 /scripts/hmi.py && sleep 1000"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  wazuh.manager:
    image: wazuh/wazuh-manager:4.7.2
    hostname: wazuh.manager
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 655360
        hard: 655360
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      - INDEXER_URL=https://wazuh.indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - FILEBEAT_SSL_VERIFICATION_MODE=full
      - SSL_CERTIFICATE_AUTHORITIES=/etc/ssl/root-ca.pem
      - SSL_CERTIFICATE=/etc/ssl/filebeat.pem
      - SSL_KEY=/etc/ssl/filebeat.key
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=MyS3cr37P450r.*-
    volumes:
      - wazuh_api_configuration:/var/ossec/api/configuration
      - wazuh_etc:/var/ossec/etc
      - wazuh_logs:/var/ossec/logs
      - wazuh_queue:/var/ossec/queue
      - wazuh_var_multigroups:/var/ossec/var/multigroups
      - wazuh_integrations:/var/ossec/integrations
      - wazuh_active_response:/var/ossec/active-response/bin
      - wazuh_agentless:/var/ossec/agentless
      - wazuh_wodles:/var/ossec/wodles
      - filebeat_etc:/etc/filebeat
      - filebeat_var:/var/lib/filebeat
      - ./config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
      - ./config/wazuh_indexer_ssl_certs/wazuh.manager.pem:/etc/ssl/filebeat.pem
      - ./config/wazuh_indexer_ssl_certs/wazuh.manager-key.pem:/etc/ssl/filebeat.key
      - ./config/wazuh_cluster/wazuh_manager.conf:/wazuh-config-mount/etc/ossec.conf
      - ./config/0020-syslog_rules.xml:/var/ossec/ruleset/rules/0020-syslog_rules.xml
      - ./config/0379-dpkg_decoders.xml:/var/ossec/ruleset/decoders/0379-dpkg_decoders.xml
    healthcheck:
      test: curl --fail http://localhost:55000 || exit 1
      interval: 40s
      timeout: 30s
      retries: 20
      start_period: 60s
    networks:
      - simulation-network

  wazuh.indexer:
    image: wazuh/wazuh-indexer:4.7.2
    hostname: wazuh.indexer
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - wazuh-indexer-data:/var/lib/wazuh-indexer
      - ./config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/certs/root-ca.pem
      - ./config/wazuh_indexer_ssl_certs/wazuh.indexer-key.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.key
      - ./config/wazuh_indexer_ssl_certs/wazuh.indexer.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.pem
      - ./config/wazuh_indexer_ssl_certs/admin.pem:/usr/share/wazuh-indexer/certs/admin.pem
      - ./config/wazuh_indexer_ssl_certs/admin-key.pem:/usr/share/wazuh-indexer/certs/admin-key.pem
      - ./config/wazuh_indexer/wazuh.indexer.yml:/usr/share/wazuh-indexer/opensearch.yml
      - ./config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/opensearch-security/internal_users.yml
    networks:
      - simulation-network

  wazuh.dashboard:
    image: wazuh/wazuh-dashboard:4.7.2
    hostname: wazuh.dashboard
    restart: always
    ports:
      - 443:5601
    environment:
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - WAZUH_API_URL=https://wazuh.manager
      - DASHBOARD_USERNAME=kibanaserver
      - DASHBOARD_PASSWORD=kibanaserver
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=MyS3cr37P450r.*-
    volumes:
      - ./config/wazuh_indexer_ssl_certs/wazuh.dashboard.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
      - ./config/wazuh_indexer_ssl_certs/wazuh.dashboard-key.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
      - ./config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-dashboard/certs/root-ca.pem
      - ./config/wazuh_dashboard/opensearch_dashboards.yml:/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml
      - ./config/wazuh_dashboard/wazuh.yml:/usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml
      - wazuh-dashboard-config:/usr/share/wazuh-dashboard/data/wazuh/config
      - wazuh-dashboard-custom:/usr/share/wazuh-dashboard/plugins/wazuh/public/assets/custom
    depends_on:
      - wazuh.indexer
    links:
      - wazuh.indexer:wazuh.indexer
      - wazuh.manager:wazuh.manager
    networks:
      - simulation-network
volumes:
  wazuh_api_configuration:
  wazuh_etc:
  wazuh_logs:
  wazuh_queue:
  wazuh_var_multigroups:
  wazuh_integrations:
  wazuh_active_response:
  wazuh_agentless:
  wazuh_wodles:
  filebeat_etc:
  filebeat_var:
  wazuh-indexer-data:
  wazuh-dashboard-config:
  wazuh-dashboard-custom:

networks:
  simulation-network:
