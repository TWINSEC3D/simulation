version: '3.7'
services:
  postgres-db:
    image: postgres
    container_name: postgres-db
    hostname: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: warehouse
    ports:
      - "5432:5432"
    networks:
      - simulation-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: server
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    ports:
      - "8080:8080"
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/server.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy

  conveyor:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: conveyor
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/conveyor.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  idp_client:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: idp_client
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/idp_client.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  crane:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: crane
    volumes:
      - ./config/ossec.conf:/var/ossec/etc/ossec.conf
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && service wazuh-agent start && python3 /scripts/crane.py && sleep 1"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  hmi:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: hmi
    networks:
      - simulation-network
    command: sh -c "/scripts/wait-for-init.sh && python3 /scripts/hmi.py && sleep 1000"
    depends_on:
      postgres-db:
        condition: service_healthy
      server:
        condition: service_started

  # wazuh.manager:
  #   image: wazuh/wazuh-manager:4.7.2
  #   hostname: wazuh.manager
  #   restart: always
  #   platform: linux/amd64
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 655360
  #       hard: 655360
  #   ports:
  #     - "1514:1514"
  #     - "1515:1515"
  #     - "514:514/udp"
  #     - "55000:55000"
  #   environment:
  #     - INDEXER_URL=${INDEXER_URL}
  #     - INDEXER_USERNAME=${INDEXER_USERNAME}
  #     - INDEXER_PASSWORD=${INDEXER_PASSWORD}
  #     - FILEBEAT_SSL_VERIFICATION_MODE=${FILEBEAT_SSL_VERIFICATION_MODE}
  #     - SSL_CERTIFICATE_AUTHORITIES=${SSL_CERTIFICATE_AUTHORITIES}
  #     - SSL_CERTIFICATE=${SSL_CERTIFICATE}
  #     - SSL_KEY=${SSL_KEY}
  #     - API_USERNAME=${API_USERNAME}
  #     - API_PASSWORD=${API_PASSWORD}
  #   volumes:
  #     - ./config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.manager.pem:/etc/ssl/filebeat.pem
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.manager-key.pem:/etc/ssl/filebeat.key
  #     - ./config/wazuh_cluster/wazuh_manager.conf:/var/ossec/etc/ossec.conf
  #     - wazuh_logs:/var/ossec/logs
  #   healthcheck:
  #     test: curl --fail http://localhost:55000 || exit 1
  #     interval: 40s
  #     timeout: 30s
  #     retries: 20
  #     start_period: 60s
  #   networks:
  #     - simulation-network

  # wazuh.indexer:
  #   image: wazuh/wazuh-indexer:4.7.2
  #   hostname: wazuh.indexer
  #   restart: always
  #   platform: linux/amd64
  #   ports:
  #     - "9200:9200"
  #   environment:
  #     - OPENSEARCH_JAVA_OPTS=${OPENSEARCH_JAVA_OPTS}
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - wazuh-indexer-data:/var/lib/wazuh-indexer
  #     - ./config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/certs/root-ca.pem
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.indexer-key.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.key
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.indexer.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.pem
  #     - ./config/wazuh_indexer_ssl_certs/admin.pem:/usr/share/wazuh-indexer/certs/admin.pem
  #     - ./config/wazuh_indexer_ssl_certs/admin-key.pem:/usr/share/wazuh-indexer/certs/admin-key.pem
  #     - ./config/wazuh_indexer/wazuh.indexer.yml:/usr/share/wazuh-indexer/opensearch.yml
  #     - ./config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/opensearch-security/internal_users.yml
  #   networks:
  #     - simulation-network

  # wazuh.dashboard:
  #   image: wazuh/wazuh-dashboard:4.7.2
  #   hostname: wazuh.dashboard
  #   restart: always
  #   platform: linux/amd64
  #   ports:
  #     - 443:5601
  #   environment:
  #     - INDEXER_USERNAME=${INDEXER_USERNAME}
  #     - INDEXER_PASSWORD=${INDEXER_PASSWORD}
  #     - WAZUH_API_URL=https://wazuh.manager
  #     - DASHBOARD_USERNAME=${DASHBOARD_USERNAME}
  #     - DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}
  #     - API_USERNAME=${API_USERNAME}
  #     - API_PASSWORD=${API_PASSWORD}
  #   volumes:
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.dashboard.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
  #     - ./config/wazuh_indexer_ssl_certs/wazuh.dashboard-key.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
  #     - ./config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-dashboard/certs/root-ca.pem
  #     - wazuh-dashboard-config:/usr/share/wazuh-dashboard/data/wazuh/config
  #     - wazuh-dashboard-custom:/usr/share/wazuh-dashboard/plugins/wazuh/public/assets/custom
  #   depends_on:
  #     wazuh.indexer:
  #       condition: service_healthy
  #     wazuh.manager:
  #       condition: service_healthy
  #   links:
  #     - wazuh.indexer:wazuh.indexer
  #     - wazuh.manager:wazuh.manager
  #   networks:
  #     - simulation-network

volumes:
  postgres-data:
  wazuh_logs:
  wazuh-indexer-data:
  wazuh-dashboard-config:
  wazuh-dashboard-custom:
networks:
  simulation-network:
